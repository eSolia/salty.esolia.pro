/**
 * Version information for Salty
 * Generated by Nagare on 2025-07-01T07:10:55.069Z
 */

export const VERSION = "2.0.1";

export const BUILD_INFO = {
  buildDate: "2025-07-01T07:10:55.069Z",
  gitCommit: "3eaa3b9",
  buildEnvironment: "production",
  versionComponents: {
    major: 2,
    minor: 0,
    patch: 1,
    prerelease: null,
  },
} as const;

export const APP_INFO = {
  name: "Salty",
  description: "Browser-Native Secure Text Encryption",
  repository: "https://github.com/esolia/salty.esolia.pro",
  author: "Rick Cogley, eSolia Inc.",
  homepage: "https://salty.esolia.pro",
  license: "MIT",
} as const;
export const APP_METADATA = {} as const;
export const RELEASE_NOTES = {
  "version": "2.0.1",
  "date": "2025-07-01",
  "added": [],
  "changed": [
    "update security changelog for v2.0.0 and add reminder to CLAUDE.md (94cabf4)",
    "InfoSec: add Microsoft DevSkim security linter workflow (6f8ce92)",
  ],
  "deprecated": [],
  "removed": [],
  "fixed": [
    "resolve all lint warnings (any types and require-await) (3eaa3b9)",
    "add missing assertThrows import and fix formatting (2776420)",
    "update GitHub Actions to use upload-artifact@v4 (df2f0c9)",
    "add missing exports to version.ts for server compatibility (1793f11)",
  ],
  "security": [],
} as const;

// Tech specifications used by the application
export const TECH_SPECS = {
  platform: "Deno Deploy",
  runtime: "Deno",
  cryptoFeatures: [
    "AES-GCM-256 encryption",
    "PBKDF2-SHA512 key derivation",
    "600,000 iterations",
    "basE91 encoding",
    "Web Crypto API",
  ],
  securityFeatures: [
    "Rate limiting",
    "Input validation",
    "Security headers",
    "API authentication",
    "Request size limits",
    "Structured logging",
    "Security event tracking",
  ],
  endpoints: [
    { path: "/", description: "Japanese UI" },
    { path: "/en/", description: "English UI" },
    { path: "/api/encrypt", method: "POST", description: "Encrypt endpoint" },
    { path: "/api/decrypt", method: "POST", description: "Decrypt endpoint" },
    { path: "/health", method: "GET", description: "Health check endpoint" },
  ],
} as const;

// Security information for the application
export const SECURITY_INFO = {
  rateLimiting: {
    window: "1 hour",
    maxRequests: 20,
  },
  maxPayloadSize: "1MB",
  maxKeySize: "1KB",
  securityHeaders: [
    "Content-Security-Policy",
    "Strict-Transport-Security",
    "X-Content-Type-Options",
    "X-Frame-Options",
    "X-XSS-Protection",
    "Referrer-Policy",
  ],
} as const;

// Version utility class
export class VersionUtils {
  static getExtendedVersion(): string {
    return `${VERSION} (Built: ${BUILD_INFO.buildDate})`;
  }

  static getDetailedInfo() {
    return {
      version: VERSION,
      build: BUILD_INFO,
      app: APP_INFO,
      specs: TECH_SPECS,
      security: SECURITY_INFO,
    };
  }

  static isPrerelease(): boolean {
    return BUILD_INFO.versionComponents.prerelease !== null;
  }

  static getReleaseType(): string {
    if (this.isPrerelease()) {
      return "prerelease";
    }
    return "stable";
  }
}
