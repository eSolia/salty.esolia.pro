/**
 * @fileoverview Centralized version and metadata information for Salty
 * @description Single source of truth for all version-related information
 *
 * THIS FILE IS AUTO-GENERATED BY NAGARE - DO NOT EDIT DIRECTLY
 * To update version information, use: deno task release:[patch|minor|major]
 * Template defined in: nagare.config.ts
 *
 * @generated by Nagare v1.0.1
 * @see https://github.com/esolia/salty.esolia.pro/blob/main/nagare.config.ts
 */

/**
 * Application version information
 */
export const VERSION = "1.2.5";

/**
 * Build and deployment metadata
 */
export const BUILD_INFO = {
  buildDate: "2025-06-27T11:15:17.082Z",
  gitCommit: "df67cbd",
  buildEnvironment: "production",
  versionComponents: {
    major: 1,
    minor: 2,
    patch: 5,
    prerelease: null,
  },
} as const;

/**
 * Application metadata
 */
export const APP_METADATA = {
  name: "Salty",
  description: "Browser-Native Secure Text Encryption",
  author: "Rick Cogley, eSolia Inc.",
  license: "MIT",
  repository: "https://github.com/esolia/salty.esolia.pro",
  homepage: "https://salty.esolia.pro",
} as const;

/**
 * Technical specifications
 */
export const TECH_SPECS = {
  platform: "Deno Deploy",
  runtime: `Deno ${Deno.version.deno}`,
  cryptoFeatures: [
    "AES-GCM-256 encryption",
    "PBKDF2-SHA512 key derivation",
    "600,000 iterations",
    "basE91 encoding",
    "Web Crypto API",
  ],
  securityFeatures: [
    "Rate limiting (20 requests/hour)",
    "Input validation",
    "Security headers (CSP, HSTS, XSS)",
    "API authentication",
    "Structured logging",
    "Request size limits",
  ],
  endpoints: [
    "/",
    "/en/",
    "/api/encrypt",
    "/api/decrypt",
    "/health",
    "/salty.ts",
  ],
} as const;

/**
 * Security configuration information
 */
export const SECURITY_INFO = {
  rateLimiting: {
    window: "1 hour",
    maxRequests: 20,
  },
  maxPayloadSize: "1MB",
  maxKeySize: "1KB",
  securityHeaders: [
    "Content-Security-Policy",
    "Strict-Transport-Security",
    "X-Content-Type-Options",
    "X-Frame-Options",
    "X-XSS-Protection",
    "Referrer-Policy",
  ],
} as const;

/**
 * Release notes for the current version
 */
export const RELEASE_NOTES = {
  version: VERSION,
  releaseDate: "2025-06-27",
  changes: {
    added: [],
    improved: [],
    removed: [],
    fixed: [],
    security: [],
  },
} as const;

/**
 * Version utility functions
 */
export class VersionUtils {
  /**
   * Get the full version string with build metadata
   */
  static getExtendedVersion(): string {
    const { major, minor, patch, prerelease } = BUILD_INFO.versionComponents;
    let version = `${major}.${minor}.${patch}`;
    if (prerelease) {
      version += `-${prerelease}`;
    }
    return `${version}+${BUILD_INFO.gitCommit}`;
  }

  /**
   * Get detailed version information
   */
  static getDetailedInfo() {
    return {
      version: VERSION,
      extended: this.getExtendedVersion(),
      buildDate: BUILD_INFO.buildDate,
      commit: BUILD_INFO.gitCommit,
      environment: BUILD_INFO.buildEnvironment,
      components: BUILD_INFO.versionComponents,
    };
  }

  /**
   * Check if this is a prerelease version
   */
  static isPrerelease(): boolean {
    return BUILD_INFO.versionComponents.prerelease !== null;
  }

  /**
   * Get release type
   */
  static getReleaseType(): string {
    if (this.isPrerelease()) {
      return BUILD_INFO.versionComponents.prerelease || "prerelease";
    }
    return "stable";
  }
}
