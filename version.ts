/**
 * Version information for Salty
 * Generated by Nagare on 2025-07-02T01:36:09.978Z
 */

export const VERSION = "2.1.3";

export const BUILD_INFO = {
  buildDate: "2025-07-02T01:36:09.978Z",
  gitCommit: "dbc17e4",
  buildEnvironment: "production",
  versionComponents: {
    major: 2,
    minor: 1,
    patch: 3,
    prerelease: null,
  },
} as const;

export const APP_INFO = {
  name: "Salty",
  description: "Browser-Native Secure Text Encryption",
  repository: "https://github.com/esolia/salty.esolia.pro",
  author: "Rick Cogley, eSolia Inc.",
  homepage: "https://salty.esolia.pro",
  license: "MIT",
} as const;
export const APP_METADATA = {} as const;
export const RELEASE_NOTES = {
  "version": "2.1.3",
  "date": "2025-07-02",
  "added": [],
  "changed": [
    "bump nagare to 1.9.3 (dbc17e4)",
    "bump nagare to 1.9.0 (90215a9)",
  ],
  "deprecated": [],
  "removed": [],
  "fixed": [
    "add missing assert import in salty_security_test.ts (a4c07cb)",
    "apply deno formatting to server.ts (8d032a1)",
    "resolve code scanning security alerts (aec544d)",
    "remove unsupported package ecosystems from Dependabot config (c6b83ef)",
    "improve security workflow pattern matching (7a4ddb1)",
    "resolve linting errors and test failures (097ede0)",
    "resolve formatting issues to fix Security Tests workflow (30adf99)",
  ],
  "security": [],
} as const;

// Additional exports configured in nagare.config.ts

/** Tech specifications used by the application */
export const TECH_SPECS = {
  "platform": "Deno Deploy",
  "runtime": "Deno",
  "cryptoFeatures": [
    "AES-GCM-256 encryption",
    "PBKDF2-SHA512 key derivation",
    "600,000 iterations",
    "basE91 encoding",
    "Web Crypto API",
  ],
  "securityFeatures": [
    "Rate limiting",
    "Input validation",
    "Security headers",
    "API authentication",
    "Request size limits",
    "Structured logging",
    "Security event tracking",
  ],
  "endpoints": [
    {
      "path": "/",
      "description": "Japanese UI",
    },
    {
      "path": "/en/",
      "description": "English UI",
    },
    {
      "path": "/api/encrypt",
      "method": "POST",
      "description": "Encrypt endpoint",
    },
    {
      "path": "/api/decrypt",
      "method": "POST",
      "description": "Decrypt endpoint",
    },
    {
      "path": "/health",
      "method": "GET",
      "description": "Health check endpoint",
    },
  ],
} as const;

/** Security information for the application */
export const SECURITY_INFO = {
  "rateLimiting": {
    "window": "1 hour",
    "maxRequests": 20,
  },
  "maxPayloadSize": "1MB",
  "maxKeySize": "1KB",
  "securityHeaders": [
    "Content-Security-Policy",
    "Strict-Transport-Security",
    "X-Content-Type-Options",
    "X-Frame-Options",
    "X-XSS-Protection",
    "Referrer-Policy",
  ],
} as const;

/** Version utility class */
export class VersionUtils {
  static getExtendedVersion(): string {
    return `${VERSION} (Built: ${BUILD_INFO.buildDate})`;
  }

  static getDetailedInfo() {
    return {
      version: VERSION,
      build: BUILD_INFO,
      app: APP_INFO,
      specs: TECH_SPECS,
      security: SECURITY_INFO,
    };
  }

  static isPrerelease(): boolean {
    return BUILD_INFO.versionComponents.prerelease !== null;
  }

  static getReleaseType(): string {
    if (this.isPrerelease()) {
      return "prerelease";
    }
    return "stable";
  }
}
