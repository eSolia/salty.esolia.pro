/**
 * Version information for Salty
 * Generated by Nagare on 2025-07-01T06:31:39.834Z
 */

export const VERSION = "2.0.0";

export const BUILD_INFO = {
  buildDate: "2025-07-01T06:31:39.834Z",
  gitCommit: "2156044",
  buildEnvironment: "production",
  versionComponents: {
    major: 2,
    minor: 0,
    patch: 0,
    prerelease: null,
  },
} as const;

export const APP_INFO = {
  name: "Salty",
  description: "Browser-Native Secure Text Encryption",
  repository: "https://github.com/esolia/salty.esolia.pro",
  author: "Rick Cogley, eSolia Inc.",
  homepage: "https://salty.esolia.pro",
  license: "MIT",
} as const;
export const APP_METADATA = {} as const;

// Additional exports required by server.ts
export const TECH_SPECS = {
  platform: "Deno Deploy",
  runtime: "Deno",
  cryptoFeatures: [
    "AES-GCM-256 encryption",
    "PBKDF2-SHA512 key derivation",
    "600,000 iterations",
    "basE91 encoding",
    "Web Crypto API"
  ],
  securityFeatures: [
    "Rate limiting (20 requests/hour)",
    "Input validation",
    "Security headers (CSP, HSTS, XSS)",
    "API authentication",
    "Structured logging",
    "Request size limits"
  ],
  endpoints: [
    "/",
    "/en/",
    "/api/encrypt",
    "/api/decrypt",
    "/health",
    "/salty.ts"
  ]
} as const;

export const SECURITY_INFO = {
  rateLimiting: {
    window: "1 hour",
    maxRequests: 20
  },
  maxPayloadSize: "1MB",
  maxKeySize: "1KB",
  securityHeaders: [
    "Content-Security-Policy",
    "Strict-Transport-Security",
    "X-Content-Type-Options",
    "X-Frame-Options",
    "X-XSS-Protection",
    "Referrer-Policy"
  ]
} as const;

export class VersionUtils {
  static getExtendedVersion(): string {
    const { major, minor, patch, prerelease } = BUILD_INFO.versionComponents;
    let version = `${major}.${minor}.${patch}`;
    if (prerelease) {
      version += `-${prerelease}`;
    }
    return `${version}+${BUILD_INFO.gitCommit}`;
  }

  static getDetailedInfo() {
    return {
      version: VERSION,
      extended: this.getExtendedVersion(),
      buildDate: BUILD_INFO.buildDate,
      commit: BUILD_INFO.gitCommit,
      environment: BUILD_INFO.buildEnvironment,
      components: BUILD_INFO.versionComponents
    };
  }

  static isPrerelease(): boolean {
    return BUILD_INFO.versionComponents.prerelease !== null;
  }

  static getReleaseType(): string {
    if (this.isPrerelease()) {
      return BUILD_INFO.versionComponents.prerelease || "prerelease";
    }
    return "stable";
  }
}

export const RELEASE_NOTES = {
  "version": "2.0.0",
  "date": "2025-07-01",
  "added": [
    "add comprehensive security documentation and enhancements (a4fd1fc)"
  ],
  "changed": [
    "InfoSec: implement comprehensive security infrastructure (5fc60fb)",
    "upgrade nagare from 1.1.1 to 1.7.3 (659bf89)",
    "add programming paradigm documentation and coding guidelines (45ab0b3)"
  ],
  "deprecated": [],
  "removed": [],
  "fixed": [
    "use standard TYPESCRIPT template format (2156044)",
    "simplify nagare.config.ts to use built-in TYPESCRIPT_EXTENDED template (46caf28)",
    "switch to built-in TYPESCRIPT_EXTENDED template to avoid validation issues (ee5db83)",
    "remove dynamic Deno version access from template to avoid nagare validation error (cb8cc9c)"
  ],
  "security": []
} as const;
