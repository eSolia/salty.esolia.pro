/**
 * Version information for Salty
 * Generated by Nagare on 2025-07-04T07:47:44.353Z
 *
 * Note: This template generates TypeScript code, not HTML.
 * The |> safe filter is used to output raw values without escaping.
 */

export const VERSION = "2.2.6";

export const BUILD_INFO = {
  buildDate: "2025-07-04T07:47:44.353Z",
  gitCommit: "73df295",
  buildEnvironment: "production",
  versionComponents: {
    major: 2,
    minor: 2,
    patch: 6,
    prerelease: null,
  },
} as const;

export const APP_INFO = {
  name: "Salty",
  description: "Browser-Native Secure Text Encryption",
  repository: "https://github.com/esolia/salty.esolia.pro",
  author: "Rick Cogley, eSolia Inc.",
  homepage: "https://salty.esolia.pro",
  license: "MIT",
} as const;
export const APP_METADATA = {} as const;
export const RELEASE_NOTES = {
  "version": "2.2.6",
  "date": "2025-07-04",
  "added": [],
  "changed": [],
  "deprecated": [],
  "removed": [],
  "fixed": [
    "restore critical UI functionality after Vento templating (73df295)",
    "add missing salt injection placeholder (67e43b8)",
  ],
  "security": [],
} as const;

// Additional exports configured in nagare.config.ts

/** Tech specifications used by the application */
export const TECH_SPECS = {
  "platform": "Deno Deploy",
  "runtime": "Deno",
  "cryptoFeatures": [
    "AES-GCM-256 encryption",
    "PBKDF2-SHA512 key derivation",
    "600,000 iterations",
    "basE91 encoding",
    "Web Crypto API",
  ],
  "securityFeatures": [
    "Rate limiting",
    "Input validation",
    "Security headers",
    "API authentication",
    "Request size limits",
    "Structured logging",
    "Security event tracking",
  ],
  "endpoints": [
    {
      "path": "/",
      "description": "Japanese UI",
    },
    {
      "path": "/en/",
      "description": "English UI",
    },
    {
      "path": "/api/encrypt",
      "method": "POST",
      "description": "Encrypt endpoint",
    },
    {
      "path": "/api/decrypt",
      "method": "POST",
      "description": "Decrypt endpoint",
    },
    {
      "path": "/health",
      "method": "GET",
      "description": "Health check endpoint",
    },
  ],
} as const;

/** Security information for the application */
export const SECURITY_INFO = {
  "rateLimiting": {
    "window": "1 hour",
    "maxRequests": 20,
  },
  "maxPayloadSize": "1MB",
  "maxKeySize": "1KB",
  "securityHeaders": [
    "Content-Security-Policy",
    "Strict-Transport-Security",
    "X-Content-Type-Options",
    "X-Frame-Options",
    "X-XSS-Protection",
    "Referrer-Policy",
  ],
} as const;

/** Security compliance and standards information */
export const SECURITY_COMPLIANCE = {
  "standards": {
    "owasp": {
      "a01_brokenAccessControl": "N/A - No user authentication system",
      "a02_cryptographicFailures":
        "AES-256-GCM with PBKDF2-SHA512 (600k iterations)",
      "a03_injection": "Input validation and sanitization on all endpoints",
      "a04_insecureDesign": "Security-first design with rate limiting",
      "a05_securityMisconfiguration":
        "Secure headers, strict CSP, HSTS enabled",
      "a06_vulnerableComponents": "Regular Deno and dependency updates",
      "a07_authFailures": "API key authentication for sensitive endpoints",
      "a08_dataIntegrityFailures": "HMAC validation in encrypted payloads",
      "a09_loggingFailures": "Structured logging with security events",
      "a10_ssrf": "N/A - No external requests from user input",
    },
  },
  "lastSecurityReview": "BUILD_INFO.buildDate",
  "encryptionDetails": {
    "algorithm": "AES-GCM",
    "keySize": 256,
    "keyDerivation": "PBKDF2-SHA512",
    "iterations": 600000,
    "saltSize": 16,
    "ivSize": 12,
    "tagSize": 16,
  },
} as const;

/** Version utility class */
export class VersionUtils {
  static getExtendedVersion(): string {
    return `${VERSION} (Built: ${BUILD_INFO.buildDate})`;
  }

  static getDetailedInfo() {
    return {
      version: VERSION,
      build: BUILD_INFO,
      app: APP_INFO,
      specs: TECH_SPECS,
      security: SECURITY_INFO,
      compliance: SECURITY_COMPLIANCE,
    };
  }

  static isPrerelease(): boolean {
    return BUILD_INFO.versionComponents.prerelease !== null;
  }

  static getReleaseType(): string {
    if (this.isPrerelease()) {
      return "prerelease";
    }
    return "stable";
  }
}
