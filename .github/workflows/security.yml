name: Security Tests

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]
  schedule:
    # Run daily at 2 AM UTC
    - cron: "0 2 * * *"
  workflow_dispatch:

permissions:
  contents: read
  security-events: write

jobs:
  security-tests:
    runs-on: ubuntu-latest
    timeout-minutes: 15

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Deno
        uses: denoland/setup-deno@v2
        with:
          deno-version: v2.x

      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.deno
            ~/.cache/deno
          key: ${{ runner.os }}-deno-${{ hashFiles('**/deno.lock') }}
          restore-keys: |
            ${{ runner.os }}-deno-

      - name: Basic security checks
        run: |
          echo "Running basic security checks..."

          # Check for obvious hardcoded secrets (simple patterns)
          echo "Checking for hardcoded secrets..."
          if grep -r -i "password\s*=\s*[\"']" --include="*.ts" --include="*.js" --exclude-dir=".git" --exclude-dir="node_modules" --exclude-dir="coverage" --exclude="*_test.ts" . 2>/dev/null; then
            echo "Found hardcoded password"
            exit 1
          fi

          # Check for eval usage
          echo "Checking for eval usage..."
          if grep -r "\beval\s*\(" --include="*.ts" --include="*.js" --exclude-dir=".git" --exclude-dir="node_modules" --exclude-dir="coverage" --exclude="*_test.ts" . 2>/dev/null; then
            echo "Found eval usage"
            exit 1
          fi

          # Check for overly broad permissions
          echo "Checking for overly broad permissions..."
          if grep -r "--allow-all" --include="*.ts" --include="*.js" --include="*.json" --exclude-dir=".git" --exclude-dir="node_modules" --exclude-dir="coverage" --exclude-dir=".claude" --exclude-dir=".github" --exclude-dir="docs" . 2>/dev/null | grep -v "# Example\|# BAD\|# Don't\|# Never\|# Avoid"; then
            echo "Found use of --allow-all flag"
            exit 1
          fi

          echo "Basic security checks passed"

      - name: Security audit report
        if: always()
        run: |
          echo "Security Test Summary" > security-report.txt
          echo "===================" >> security-report.txt
          echo "Date: $(date)" >> security-report.txt
          echo "Branch: ${{ github.ref }}" >> security-report.txt
          echo "Commit: ${{ github.sha }}" >> security-report.txt
          echo "" >> security-report.txt
          echo "Basic security checks completed" >> security-report.txt
          echo "Note: Advanced security scanning handled by CodeQL and DevSkim workflows" >> security-report.txt

      - name: Upload security report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: security-report
          path: security-report.txt
          retention-days: 30
